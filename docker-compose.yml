version: '3.6'
services:
  postgres:
    image: postgres:12
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  graphql-engine:
    image: hasura/graphql-engine:v2.22.0
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: Jya509RsTuhTj6cPIJ5UD2I0SgOiSWOU7jDwbhWgNdL24CUHIAjTXDJvkVi2HK1C
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256","key":"6283636c-ed55-4cdc-9da6-38bfece5f3f6","claims_format":"json"}'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
  green_musk:
    container_name: green_musk_app
    image: green_musk_app
    build:
      context: .
      dockerfile: Dockerfile
    user: "node"
    environment:
      - NODE_ENV=production
      - ORIGIN=http://localhost:3000
    env_file:
      - .env.production
    restart: unless-stopped
    ports:
      - 3000:3000

volumes:
  db_data:
